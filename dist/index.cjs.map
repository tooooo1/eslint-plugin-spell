{"version":3,"sources":["../lib/index.ts","../lib/rules/correctSpellings.ts"],"sourcesContent":["import type { Rule } from \"eslint\";\n\nimport correctSpellings from \"./rules/correctSpellings\";\n\nexport const rules: Record<string, Rule.RuleModule> = {\n  correct: correctSpellings,\n};\n","import type { Rule } from \"eslint\";\n\nconst rule: Rule.RuleModule = {\n  meta: {\n    type: \"problem\",\n    docs: {\n      description: \"ESLint plugin to detect and report misspellings against\",\n      category: \"Stylistic Issues\",\n      recommended: false,\n    },\n    schema: [\n      {\n        type: \"object\",\n        properties: {\n          correctSpellings: {\n            type: \"array\",\n            items: {\n              type: \"string\",\n            },\n          },\n        },\n        additionalProperties: false,\n      },\n    ],\n  },\n\n  create(context) {\n    const options = context.options[0] || {};\n    const correctSpellings: string[] = options.correctSpellings || [];\n\n    function checkSpelling(node: Rule.Node, value: string) {\n      if (!correctSpellings.some((spelling) => value.includes(spelling))) {\n        context.report({\n          node,\n          message: `Potential misspelling detected: '${value}' is not in the list of correct spellings.`,\n        });\n      }\n    }\n\n    return {\n      Literal(node) {\n        if (typeof node.value === \"string\") {\n          checkSpelling(node, node.value);\n        }\n      },\n      Identifier(node) {\n        checkSpelling(node, node.name);\n      },\n    };\n  },\n};\n\nexport default rule;\n"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACEA,IAAM,OAAwB;AAAA,EAC5B,MAAM;AAAA,IACJ,MAAM;AAAA,IACN,MAAM;AAAA,MACJ,aAAa;AAAA,MACb,UAAU;AAAA,MACV,aAAa;AAAA,IACf;AAAA,IACA,QAAQ;AAAA,MACN;AAAA,QACE,MAAM;AAAA,QACN,YAAY;AAAA,UACV,kBAAkB;AAAA,YAChB,MAAM;AAAA,YACN,OAAO;AAAA,cACL,MAAM;AAAA,YACR;AAAA,UACF;AAAA,QACF;AAAA,QACA,sBAAsB;AAAA,MACxB;AAAA,IACF;AAAA,EACF;AAAA,EAEA,OAAO,SAAS;AACd,UAAM,UAAU,QAAQ,QAAQ,CAAC,KAAK,CAAC;AACvC,UAAM,mBAA6B,QAAQ,oBAAoB,CAAC;AAEhE,aAAS,cAAc,MAAiB,OAAe;AACrD,UAAI,CAAC,iBAAiB,KAAK,CAAC,aAAa,MAAM,SAAS,QAAQ,CAAC,GAAG;AAClE,gBAAQ,OAAO;AAAA,UACb;AAAA,UACA,SAAS,oCAAoC,KAAK;AAAA,QACpD,CAAC;AAAA,MACH;AAAA,IACF;AAEA,WAAO;AAAA,MACL,QAAQ,MAAM;AACZ,YAAI,OAAO,KAAK,UAAU,UAAU;AAClC,wBAAc,MAAM,KAAK,KAAK;AAAA,QAChC;AAAA,MACF;AAAA,MACA,WAAW,MAAM;AACf,sBAAc,MAAM,KAAK,IAAI;AAAA,MAC/B;AAAA,IACF;AAAA,EACF;AACF;AAEA,IAAO,2BAAQ;;;ADhDR,IAAM,QAAyC;AAAA,EACpD,SAAS;AACX;","names":[]}